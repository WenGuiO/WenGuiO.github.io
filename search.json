[{"title":"教师管理系统C语言(一)-系统介绍","path":"/2022/12/30/教师管理系统C语言(一)-系统介绍/","content":"一、目的和要求教师工资管理是较难处理的信息管理，使用传统方法，浪费时间，并不高效，并且数据容易丢失。为方便处理教师的信息，提高信息管理效率，此次选题为教师工资管理系统。 一个较为完善的教师工资管理系统，需要包含一个教师的完整信息：教师号、姓名、性别、单位名称、家庭住址、联系电话、基本工资、津贴、生活补贴、应发工资、电话费、水电费、房租、所得税、卫生费、公积金，需要对数据进行录入、排序，同时可以对其进行修改、删除、查询功能。本系统面对的对象是教师工资信息管理者，通过执行不同的功能选择，管理者能对教师工资信息进行相应的整理，从而提升信息管理效率。 我希望，通过这次程序设计可以增强我们对所学知识的更进一步认识，去熟悉掌握与灵活运用c语言，我将以所学的函数、数组、指针、链表、文件等知识来实现教师工资管理系统。 二、总体设计1. 基本思路利用链表，数组来对教师信息进行存储；通过函数，指针来对教师信息进行操作，实现相应的功能。 2. 设计思想：A.多个函数来实现整个系统的多个功能。例如，MainMenu函数将整个功能菜单打印出来，显示在界面上，让系统使用者清楚知道有那些功能选择。ShowAllTeacher函数可以遍历系统内存有的教师工资信息，而当想要浏览个别教师信息的时候，调用SearchTeacherById函数与SearchTeacherByName函数，可以分别通过教师号和名字查找到教师。以此类推，调用不同的函数，可以实现数据的录入，修改，删除，保存功能。 B.系统用一个结构体，记录每个教师所有工资信息，将存有数据的文件读取到链表当中，用链表的结点，来实现排序，删除等功能。 C.整个系统中最为重要的是指针。通过指针，可以指向任何变量（只要这个变量是在定义过的结构体内的变量），比数组更简洁迅速地找到目的变量，在实现精准查找，删除和修改等功能中起到了巨大的作用。 D.文件功能，实现将庞大的数据储存，打破数据过大的限制。存入特定的文件后，可以在下一次运行程序中打开文件，对文件的数据进行其他的操作。 3. 系统流程图图1.系统流程 三、数据及数据结构设计描述 struct Teacher为教师信息结构体，储存所有教师信息，通过其创造单向链表，其他功能对其操作从而实现教师的增删减改。 12345678910111213141516171819202122232425262728293031323334353637struct Teacher&#123;​\tint id;​\tchar name[10];​\tchar gender[5];​\tchar work_adress[20];​\tchar home_adress[20];​\tchar tel[11];​\tdouble salary; //基本工资 ​\tdouble allowance; //津贴 ​\tdouble living_all; //生活补贴​\tdouble tel_bill; //电话费 ​\tdouble water_electric_bill; //水电费 ​\tdouble room_charge; //房租​\tdouble income_tax; //所得税 ​\tdouble sanitation_fee; //卫生稅 ​\tdouble reserve_fund; //公积金​\tstruct Teacher* next;&#125;; 四、详细设计1.函数清单及说明1234567891011121314151617181920212223int MainMenu (); //开始主菜单 struct Teacher *ExtractTeacherOfFile(); //初始化链表（从文件提取数据）void ModifyTeacherInformation (struct Teacher *pHead); //信息修改 void AddTeacherInformation (struct Teacher *pHead); //信息录入 int IdIsExist (struct Teacher *pHead, int id); //判断教师号是否重复 void ShowTeacherInformation (struct Teacher *p); //展示教师信息 void DeleteTeacherInformation (struct Teacher *pHead); //信息删除 void SearchMenu (struct Teacher *pHead); //信息查找主菜单 void SearchTeacherById (struct Teacher *pHead); //教师号查找 void SearchTeacherByName (struct Teacher *pHead); //姓名查找 void ShowAllTeachers (struct Teacher *pHead); //查看所有教师信息 void ReserveTeacherInformation (struct Teacher *pHead); //保存信息，退出系统 2. 函数调用关系说明A. 主菜单–int MainMenu() 123456789101112struct Teacher *ExtractTeacherOfFile() //从文件提取教师数据void AddTeacherInformation(struct Teacher *pHead)void DeleteTeacherInformation(struct Teacher *pHead)void ModifyTeacherInformation(struct Teacher *pHead)void SearchMenu(struct Teacher *pHead)void ReserveTeacherInformation(struct Teacher *pHead) B. 录入教师信息–void AddTeacherInformation(struct Teacher *pHead) 1int IdIsExist(struct Teacher* pHead, int id) //判断教师号是否存在 C. 删除教师信息–void DeleteTeacherInformation(struct Teacher *pHead) 1void ShowTeacherInformation(ptem)//展示当前教师信息 D. 修改教师信息–void ModifyTeacherInformation(struct Teacher *pHead) 1void ShowTeacherInformation(ptem) E. 查找教师信息–void SearchMenu(struct Teacher *pHead) 1234567void ShowTeacherInformation(struct Teacher *ptem) void SearchTeacherById(struct Teacher *pHead) //教师号查询void SearchTeacherByName(struct Teacher *pHead) //名字查询void ShowAllTeachers(struct Teacher *pHead) //查看所有教师信息 F. 退出–void ReserveTeacherInformation(struct Teacher *pHead) 五、系统测试分析1. 主菜单程序运行后，成功进入主菜单，输入正确的功能选项可进入相应的功能模块，输入错误则刷新页面重新选择。 图2.主菜单 2. 录入教师信息选择功能“1”，进入教师信息的录入。录入信息完成后，根据提升可选择是否再次录入，选择否则退出教师录入功能。 图3.教师信息录入 3. 修改教师信息选择功能“2”进入教师信息修改功能，输入教师号，显示当前教师信息， 可选择相应修改项， 图4.选择修改项 确定不再需要修改或修改过一次选择“0”返回则显示修改后信息。 图5.修改后信息 未找到该教师则显示“该教师号不存在”，按任意键返回主菜单。 图6.未找到修改教师信息 4. 删除教师信息选择功能“3”进行教师信息删除，输入删除教师号，查找到则提示是否删除，确认删除，展示“删除成功”界面，按任意键返回主菜单。 图7.删除教师信息 若不存在该教师，则提示“该教师号不存在”，按任意键可返回主菜单。 5. 查询教师信息选择功能“4”进入教师信息查询，可选择相对应的查询方式来查询。 A. 以教师号查询 图8.教师号查询 B. 以姓名查询（图9） 图9.姓名查询 图10.查看所有教师信息 C. 查看所有教师信息（图10） D. 选择“0”退出 6. 保存教师信息，退出系统选择功能“0”实现教师信息保存与退出系统，保存成功则显示“保存成功”提示，按任意键退出系统。 图11. 保存教师信息 7. 教师数据提取每次系统运行会自动提取储存在文件中的数据，以防对文件操作导致教师数据丢失。关闭系统，再次打开，以功能“4”是否查找到教师信息为依据，判断是否成功提取。提取成功如图12。 图12.提取数据验证展示 六、其他拓展：系统面对对象可以分为两类：系统管理者与教师。系统管理者可以新增教师，或查看修改所有教师的任何信息，而教师只可以查看与更改自己的信息。同时，为保障所有信息的安全性，每位管理员或教师都有自己的用户名和密码。另外，可以增加教师的各项排名情况，使系统的功能更加多样化。 具体源码设计以及分析请等待更新。","tags":["C语言"]},{"title":"数字钟的设计","path":"/2022/12/30/数字钟的设计/","content":"一、项目概况1. 选题目的数字钟的出现，给人类提供了巨大的便利，人类可以知道自己某个时刻具体干什么事。例如，秒表可以用来记录某一件事的所用的时间，时钟则可以记录一天的过程。本次实验选题目的，就是通过自己所学到的知识去设计一个数字钟，了解数字钟实现的原理，以及加强自己对所学知识的运用。 2. 项目构思要实现数字钟，需要有计数模块，它是是最核心的一部分；需要有对时钟信号进行分频的分频模块；需要有对输出结果的动态扫描、显示模块；以及还有设计拓展的各种小功能模块。基于这些模块功能设计，对其进行输入、输出互联，从而去实现一个具有功能性的数字钟。 二、方案设计1. 系统简介本次实现的数字钟系统中含有各个小模块，具体如下： a. 计数模块：数字钟计数的基础，通过计数来实现数字的变化，从而实现对时间变化的同步。 b. 分频模块：时钟信号的频率过快，我们需要对其实现分频，才可实现现实中1秒时间的变化。 c. 显示模块：对输出结果进行展示，通过输出绑定数码管，实现数字的显示。 d. 动态扫描模块：辅助显示模块，选择相应的数码管进行显示模块的输出显示。 e. 其他功能：基于以上模块，通过其输入输出的连接实现对数字钟的计数，暂停，清零功能。 2. 系统框图图1.系统框图 3. 各模块具体设计a. 计数模块： ①　秒，分（60进制）：利用两个74160分别实现个位计数与十位计数，用个位模块的74160进位端口RCO来实现十位的计数。当十位为0101和个位为1001时，重置计数。 图2.秒、分钟计数模块 ②　时（24进制）：利用两个74160分别实现个位计数与十位计数，用个位模块的74160进位端口RCO来实现十位的计数。当十位为0010和个位为0011时，重置计数。 图3.时钟计数模块 b. 分频模块： ①　利用plm实现对计数模块时钟信号的分频（clkk），设置26位比特位，模值为5010241024，从而得到1hz分频。 ②　利用plm实现对动态扫描计数部分的分频（lclk），通过不断测试，设置20位比特位，模值为25600显示结果正常。 图4.分频模块 c. 显示模块： 图5.显示模块 ①　数据选择器：具体设计如下图，通过动态扫描的数码管位选信号Q的值来选择对应数码管数据（传入的时、分、秒数据）的选择输出。 图6.数据选择器 ②　7447元件：翻译经数据选择器选择的数据信号，翻译成对应的数码管显示。 d. 动态扫描模块： 图7.动态扫描模块 前面的74160为模8计数器，重复的进行8个数码管的选择信号输出，74138通过选择信号控制相应数码管的输出，配合显示模块的时钟数据来进行输出。 e. 秒表，计时器的功能设计： ①　清零（clrn信号）： 通过74160异步置零端口CLRN实现，每个计数器连接上clrn控制信号，首先每个信号先加非门，保证没有任何操作时可以正常工作，但操作输入信号1时同时实现异步清零（连接方式如下图）。 ②　暂停（c信号）： 时钟信号与暂停控制信号组成与门，暂停控制信号后加非门，保证没有任何操作时可以正常工作，而当输入信号1时，通过与门实现对时钟信号的阻断，从而实现暂停（连接方式如下图）。 ③　校时（s信号）： 在时分秒三个计数模块加入控制信号。控制信号与每个计数器的进位信号组成或门，从而当输入脉冲控制信号时，在没有进位的情况下，每个模块能实现加法计数。（连接方式如下图） 图8.清零-暂停-校时 f. 准点报时功能： 通过判断秒钟与分钟的值，当它们都为00：00或00：01时，通过Q输出来控制输出实现报时效果。 图9.准点报时 4. 设计总图（电路连接总图）：图10.总线路设计 三、仿真与调试1. 计数 仿真a. 秒，分计数模块仿真： 图11 图12 如图所示，计数，进位正常，设计正确。 b. 小时模块仿真： 图13 如图所示，计数，进位正常，设计正确。 2. 遇到主要问题及解决办法a. 动态扫描频率导致数码管显示异常 解决：请教老师大概频率，动手调试测试得以解决 b. 小时一直无法正常计数与校准 解决：同步清零未加与非门，粗心用与门导致 四、结果展示 （具体展示如视频附件） 图14 如图所示，数码管的选择功能正常，显示正常；准点报时功能正常（如图液晶模块边的单独数码管所示）；各功能（123为秒、分、时校时加法计数控制开关，456分别为秒、分、时暂停控制开关，8为清零开关）正常。 图15","tags":["数电","数字钟"]},{"title":"博客搭建","path":"/2022/12/29/博客搭建/","content":"wait……","tags":["博客"],"categories":["博客搭建"]},{"title":"stellar探索","path":"/2022/12/28/stellar探索/","content":"top1234567#展示目录结构toc: layout: toc list_number: false min_depth: 2 max_depth: 5 fallback: recent # 当无目录结构时展示&quot;近期更新&quot; stellar官方文档"},{"title":"bug日志","path":"/2022/12/28/bug日志/","content":"BUG日志2022-121212-30 15:38 : 头像未显示 [已解决： 12-30 15:45]12-30 15:21 : 手机端(部分浏览器)无法加载图片 [猜测部分浏览器无法兼容]","tags":["bug"],"categories":["日志记录"]},{"title":"About me","path":"/about/index.html","content":"一个普通大二学生, 就读于杭州一所”大专” 联系方式： QQ: 768476667 E-mail: 768476667@qq.com 微信: wengui1107"}]